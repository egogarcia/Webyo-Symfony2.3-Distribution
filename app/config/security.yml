security:
    encoders:
        FOS\UserBundle\Model\UserInterface: sha512
    acl:
        connection: default    
    role_hierarchy:
        ROLE_ADMIN:       [ROLE_USER, ROLE_SONATA_ADMIN]
        ROLE_SUPER_ADMIN: [ROLE_USER, ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]

    providers:
        fos_userbundle:
            id: fos_user.user_provider.username_email
        in_memory:
            memory:
                users:
                    user:  { password: userpass, roles: [ 'ROLE_USER' ] }
                    admin: { password: adminpass, roles: [ 'ROLE_ADMIN' ] }

    firewalls:
        dev:
            pattern:  ^/(_(profiler|wdt)|css|images|js)/
            security: false
        admin:
            pattern: ^/admin(.*)
            context: user
            form_login:
                 provider:                        fos_userbundle
                 login_path:                      /admin/login
                 use_forward:                     false
                 check_path:                      /admin/login_check
                 failure_path:                    /admin/login
                 default_target_path:             /admin/dashboard
                 always_use_default_target_path:  true
                 use_referer:                     true
            logout:
                path:   /admin/logout
                target: /admin/login
            anonymous: true   
            
            #anonymous: ~
            #http_basic:
            #    realm: "Secured Demo Area"
        # default login area for standard users

        # This firewall is used to handle the public login area
        # This part is handled by the FOS User Bundle
        main:
            pattern:             .*
            context:             user
            form_login:
                provider:       fos_userbundle
                login_path:     /login
                use_forward:    false
                check_path:     /login_check
                failure_path:   null
            logout:             true
            anonymous:          true
            
    access_control:
        - { path: ^/admin/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/sonata/, role: ROLE_ADMIN }
        - { path: ^/admin/, role: [ROLE_USER, ROLE_ADMIN] }
        #- { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: https }
